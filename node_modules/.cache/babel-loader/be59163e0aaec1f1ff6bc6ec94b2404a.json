{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soongyu\\\\youtube-tutorials\\\\Twitter-Start\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n\n  const resolveLink = url => {\n    if (!url || !url.includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: \"mumbai\",\n        address: account\n      };\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n      const images = mumbaiNFTs.result.map(e => {\n        var _JSON$parse;\n\n        return resolveLink((_JSON$parse = JSON.parse(e.metadata)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.image);\n      });\n      setPfps(images);\n    };\n\n    fetchNFTs();\n  }, [isAuthenticated, account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP) {\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"gXLaLC2r5zMK4eNciwbwFGjYj30=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","Link","useState","useRef","useEffect","Input","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","resolveLink","url","includes","replace","fetchNFTs","options","chain","address","mumbaiNFTs","getNFTs","images","result","map","e","JSON","parse","metadata","image","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","value","i","display"],"sources":["C:/Users/soongyu/youtube-tutorials/Twitter-Start/src/pages/Settings.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Settings.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nconst Settings = () => {\r\n\r\n  const [pfps, setPfps] = useState([]);\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n  const [theFile, setTheFile] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [bio, setBio] = useState();\r\n  const { Moralis, isAuthenticated, account } = useMoralis();\r\n  const Web3Api = useMoralisWeb3Api();\r\n\r\n\r\n  const resolveLink = (url) => {\r\n    if (!url || !url.includes(\"ipfs://\")) return url;\r\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchNFTs = async () => {\r\n      const options = {\r\n        chain: \"mumbai\",\r\n        address: account\r\n      }\r\n\r\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n      const images = mumbaiNFTs.result.map(\r\n        (e) => resolveLink(JSON.parse(e.metadata)?.image)\r\n      );\r\n      setPfps(images);\r\n    }\r\n\r\n    fetchNFTs();\r\n\r\n  },[isAuthenticated, account])\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    \r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n\r\n    if (bio){\r\n      myDetails.set(\"bio\", bio);\r\n    }\r\n\r\n    if (selectedPFP){\r\n      myDetails.set(\"pfp\", selectedPFP);\r\n    }\r\n\r\n    if (username){\r\n      myDetails.set(\"username\", username);\r\n    }\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      myDetails.set(\"banner\", file.ipfs());\r\n    }\r\n\r\n    await myDetails.save();\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Settings</div>\r\n      <div className=\"settingsPage\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"NameChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setUsername(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          label=\"Bio\"\r\n          name=\"bioChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setBio(e.target.value)}\r\n        />\r\n\r\n        <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n\r\n          <div className=\"pfpOptions\">\r\n            {pfps.map((e,i) => {\r\n\r\n              return(\r\n                <>\r\n                <img\r\n                src={e}\r\n                className={\r\n                  selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n                }\r\n                onClick={() => {setSelectedPFP(pfps[i]);}}\r\n                ></img>\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}